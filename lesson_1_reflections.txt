How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Assuming the old file worked properly and the new one doesn't, the bug intorodued amoung the revison is expected. Therefore, by comparing each diff between them step by step, you will find out it.  

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    We used to save each version of files manually though, DropBox, Google Drive and others provide the savice to save periodcally. It releases us from the entire work of manual-saving files periodically.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Manual saving is good for commit per logical change purpose, it's hard distingush by time, number of code, etc. It help the other person understand the changes. The other hand, one unit of logical change differ among people, it might confuse others, sometimes.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Each has pros and cons. Saving multiple files in one commit is good for fiels connected and/or related each other, because without other files, you hardly change the file. Whereas, treating each file separately is suitable for files less connected each other, since there is less or no chance that a file refers to tohers.

How can you use the commands git log and git diff to view the history of files?

    To check the history of files, type 'git log'. To check difference between two commits, use 'git diff first_file second_file'.

How might using version control make you more confident to make changes that
could break something?

    By making sure that we retrive the previous version, we can try something new. If it doesn't work, we discard the change and retrieve the previous version then apply another way.

Now that you have your workspace set up, what do you want to try using Git for?

    Currently, we are considering coding django project. we'd like to apply Git for this project. Beside, Git or version control seems very useful for legal document, also.
